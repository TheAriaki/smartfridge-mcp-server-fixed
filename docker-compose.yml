version: '3.8'

services:
  smartfridge-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smartfridge-mcp-server
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - SERVER_MODE=http
      - PORT=3000
      - HOST=0.0.0.0
      - DATA_DIR=/app/data
      - LOG_LEVEL=info
      - CORS_ORIGIN=*
    ports:
      - "3000:3000"
    volumes:
      - ./data:/app/data:rw
      - ./logs:/app/logs:rw
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:3000/health').then(r => r.ok ? process.exit(0) : process.exit(1)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - smartfridge-network

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: smartfridge-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - smartfridge-mcp-server
    networks:
      - smartfridge-network
    profiles:
      - production

networks:
  smartfridge-network:
    driver: bridge

volumes:
  smartfridge-data:
    driver: local
  smartfridge-logs:
    driver: local